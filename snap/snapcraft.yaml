name: podpublish
version: git
version-script: |
  VER=$(grep __version__ podpublish/__init__.py  | cut -d'=' -f2 | sed 's/ //g' | sed "s/'//g")
  REV=$(git rev-parse --short HEAD)
  echo $VER-$REV
summary: A tool for encoding and publishing podcast content and assets
description: |
 A tool for encoding and publishing podcast content and assets. Inspired by
 bv-publish and the talk Stuart Langridge gave at Oggcamp 2015. Project created
 by Ubuntu Podcast and released under the GPLv2 license.

base: core18
confinement: strict
grade: stable

parts:
  podpublish:
    plugin: python
    requirements:
      - requirements.txt
    source: .
    after:
      - ffmpeg
    build-packages:
      - gcc
      - liblcms2-dev
      - libffi-dev
      - libfreetype6-dev
      - libjpeg8-dev
      - libopenjp2-7-dev
      - libssl-dev
      - libtiff5-dev
      - pkg-config
      - zlib1g-dev
    stage-packages:
      - liblcms2-2
      - libffi6
      - libfreetype6
      - libjpeg8
      - libopenjp2-7
      - libssl1.0.0
      - libtiff5
      - zlib1g
    # The cruft_ filesets define files/directories that can be safely removed
    # from podpublish to reduce the size of the snap. They have been grouped
    # to assist others seeking to shrink snaps of Python apps.
    filesets:
      cruft_binaries:
        - -bin/*.py
        - -bin/html2text
        - -bin/markdown_py
        - -bin/mid3*
        - -bin/moggsplit
        - -bin/mutagen*
        - -bin/pyrsa*
        - -usr/bin/pydoc3*
        - -usr/bin/pygettext3*
        - -usr/sbin
      cruft_compilers_and_debuggers:
        - -usr/bin/pdb3*
        - -usr/lib/gcc
        - -usr/lib/valgrind
        - -usr/share/bug
      cruft_debhelper:
        - -usr/bin/dh_*
        - -usr/share/debhelper
        - -usr/share/dh-python
        - -usr/share/perl5/Debian
      cruft_docs:
        - -usr/share/doc
        - -usr/share/doc-base
      cruft_fonts:
        - -usr/share/fonts
      cruft_headers:
        - -usr/share/include
      cruft_lintian:
        - -usr/share/lintian/overrides
      cruft_man_pages:
        - -usr/share/man
        - -share/man
      cruft_meta:
        - -usr/share/applications
        - -usr/share/pixmaps
      cruft_python_2to3:
        - -usr/bin/2to3*
        - -usr/lib/python*/lib2to3
      cruft_python_idle:
        - -usr/lib/python*/idlelib
        - -usr/lib/python*/tkinter
      cruft_python_pip:
        - -lib/python*/site-packages/pip
      cruft_python_tests:
        - -lib/python*/site-packages/tests
      cruft_python_venv:
        - -usr/lib/python*/venv
      cruft_python_wheel:
        - -lib/python*/site-packages/wheel*
      cruft_x11:
        - -usr/share/X11/XErrorDB
    prime:
      - $cruft_binaries
      - $cruft_compilers_and_debuggers
      - $cruft_debhelper
      - $cruft_docs
      - $cruft_fonts
      - $cruft_headers
      - $cruft_lintian
      - $cruft_man_pages
      - $cruft_python_2to3
      - $cruft_python_idle
      - $cruft_python_pip
      - $cruft_python_tests
      - $cruft_python_venv
      - $cruft_python_wheel
      - $cruft_x11

  nv-codec-headers:
    plugin: make
    source: https://github.com/FFmpeg/nv-codec-headers.git
    source-branch: 'sdk/9.1'
    override-build: |
      make install PREFIX=/usr
    build-packages:
      - pkg-config

  fdk-aac:
    plugin: autotools
    source: https://github.com/mstorsjo/fdk-aac/archive/v2.0.1.tar.gz
    build-packages:
      - g++
    configflags:
      - --prefix=/usr
      - --disable-static
    prime:
      - usr/lib
      - -usr/lib/pkgconfig

  ffmpeg:
    plugin: autotools
    source: https://github.com/FFmpeg/FFmpeg.git
    source-branch: release/4.3
    build-packages:
      - libdrm-dev
      - libfreetype6-dev
      - libmp3lame-dev
      - libva-dev
      - libvdpau-dev
      - libvorbis-dev
      - libx264-dev
      - pkg-config
      - yasm
      - zlib1g-dev
    stage-packages:
      - i965-va-driver
      - libdrm2
      - libfreetype6
      - libmp3lame0
      - libva-drm2
      - libva-glx2
      - libva-wayland2
      - libvdpau-va-gl1
      - libvorbis0a
      - libvorbisenc2
      - libx264-152
      - mesa-va-drivers
      - mesa-vdpau-drivers
    configflags:
      - --prefix=/usr
      - --disable-avdevice
      - --disable-debug
      - --disable-doc
      - --disable-ffplay
      - --disable-libass
      - --disable-libopus
      - --disable-libtheora
      - --disable-libvpx
      - --disable-libx265
      - --enable-cuda
      - --enable-cuvid
      - --enable-gpl
      - --enable-libdrm
      - --enable-libfdk-aac
      - --enable-libfreetype
      - --enable-libmp3lame
      - --enable-libvorbis
      - --enable-libx264
      - --enable-nonfree
      - --enable-nvenc
      - --enable-runtime-cpudetect
      - --enable-shared
      - --enable-vaapi
      - --enable-vdpau
      - --enable-version3
    after:
      - nv-codec-headers
      - fdk-aac
    prime:
      - usr/bin
      - usr/lib
      - -usr/lib/pkgconfig
      - -usr/include
      - -usr/share/doc
      - -usr/share/man

  ffmpeg-wrapper:
    plugin: dump
    source: files
    stage-packages:
      - mesa-utils
    organize:
      'ffplay': bin/
      'ffmpeg': bin/
      'ffprobe': bin/
      'wrapper': bin/
    after:
      - ffmpeg

# Export LC_ALL to work-around http://pad.lv/1576411
apps:
  encode-podcast:
    command: bin/encode-wrapper
    environment:
      LC_ALL: C.UTF-8
      # Tell libGL where to find the drivers
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/dri
      # Mesa Libs for OpenGL support
      # Workaround in snapd for proprietary nVidia drivers mounts the drivers in
      # /var/lib/snapd/lib/gl that needs to be in LD_LIBRARY_PATH
      # Without that OpenGL using apps do not work with the nVidia drivers.
      # Ref.: https://bugs.launchpad.net/snappy/+bug/1588192
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/mesa-egl:$LIBGL_DRIVERS_PATH:/var/lib/snapd/lib/gl
    plugs:
      - hardware-observe
      - home
      - opengl
      - removable-media
      - x11
  publish-podcast:
    command: usr/bin/python3 $SNAP/bin/publish-podcast
    environment:
      LC_ALL: C.UTF-8
    plugs:
      - home
      - gpg-keys
      - network
      - removable-media
      - ssh-keys
  season-to-youtube:
    command: usr/bin/python3 $SNAP/bin/season-to-youtube
    environment:
      LC_ALL: C.UTF-8
    plugs:
      - home
      - removable-media
  youtube-upload:
    command: usr/bin/python3 $SNAP/bin/youtube-upload
    environment:
      LC_ALL: C.UTF-8
    plugs:
      - home
      - network
      - removable-media
